import os
import struct

class ExtractData:
    def __init__(self, input_string):
        hex_values = []

        if input_string != None:
            strip_string = ''.join(input_string.split()) # https://stackoverflow.com/questions/8270092/remove-all-whitespace-in-a-string-in-python
            for i in range(0, len(strip_string) - 1, 2):
                hex_value = int(strip_string[i:i+2], 16)
                hex_values.append(hex_value)    

        self.buffer = hex_values

    def set_buffer(self, input_string):
        hex_values = []

        if input_string != None:
            strip_string = ''.join(input_string.split()) # https://stackoverflow.com/questions/8270092/remove-all-whitespace-in-a-string-in-python
            for i in range(0, len(strip_string) - 1, 2):
                hex_value = int(strip_string[i:i+2], 16)
                hex_values.append(hex_value)    

        self.buffer = hex_values

    def write(self, output_file_name):
        with open(os.path.dirname( os.path.abspath( __file__ )) + '/' + output_file_name, 'wb') as bin_file:
            for byte in self.buffer:
                bin_file.write(struct.pack('B', byte)) # https://stackoverflow.com/questions/18367007/python-how-to-write-to-a-binary-file        
    
if __name__ == "__main__":
    dii_raw_string = '''
    1103 1003 878E 5C63 FF00 0598 000B 0CFF
    0002 6174 2031 3830 3020 3130 3220 3830
    3830 2028 746F 6C6C 2066 7265 6529 206F
    7220 3032 3020 3430 3138 3134 3030 2074
    6F20 6164 6420 7468 6973 2074 6F20 796F
    7572 2070 6163 6B61 6765 2E0D 0A72 6564
    6275 7474 6F6E 5F6E 6F74 5F72 6561 6368
    6162 6C65 5F65 7272 6F72 5F74 6578 7420
    3D20 5365 7276 6963 6520 6973 2063 7572
    7265 6E74 6C79 206E 6F74 2073 7562 7363
    7269 6265 6420 6279 2079 6F75 2E50 6C65
    6173 6520 636F 6E74 6163 7420 6375 7374
    6F6D 6572 2063 6172 6520 6174 2031 3830
    3020 3130 3220 3830 3830 2028 746F 6C6C
    2066 7265 6529 206F 7220 3032 3020 3430
    3138 3134 3030 2074 6F20 6164 6420 7468
    6973 2074 6F20 796F 7572 2070 6163 6B61
    6765 2E0D 0A0D 0A23 5769 6467 6574 340D
    0A77 6964 203D 2034 0D0A 7265 6462 7574
    746F 6E5F 6C61 756E 6368 5F74 6578 7420
    3D20 676F 746F 2069 5456 0D0A 7265 6462
    7574 746F 6E5F 7572 6C20 3D20 6476 623A
    2F2F 4143 2E30 372E 3145 4530 0D0A 7265
    6462 7574 746F 6E5F 6664 725F 6E61 6D65
    203D 2069 5456 506F 7274 616C 2E66 6472
    0D0A 6D70 6720 3D20 6173 7365 7473 2F6D
    7067 732F 6C6F 6164 696E 672E 6D70 670D
    0A72 6564 6275 7474 6F6E 5F74 7269 616C
    5F70 6572 696F 6420 3D20 3232 2F30 312F
    3132 0D0A 7265 6462 7574 746F 6E5F 6E6F
    745F 7265 6163 685F 7469 6D65 6F75 743D
    3130 0D0A 7265 6462 7574 746F 6E5F 6E6F
    745F 6175 7468 6F72 6973 6564 203D 2054
    6869 7320 6954 5620 7365 7276 6963 6520
    6973 2063 7572 7265 6E74 6C79 206E 6F74
    2073 7562 7363 7269 6265 6420 6279 2079
    6F75 2E20 506C 6561 7365 2063 6F6E 7461
    6374 2063 7573 746F 6D65 7220 6361 7265
    2061 7420 3138 3030 2031 3032 2038 3038
    3020 2874 6F6C 6C20 6672 6565 2920 6F72
    2030 3230 2034 3031 3831 3430 3020 746F
    2061 6464 2074 6869 7320 746F 2079 6F75
    7220 7061 636B 6167 652E 0D0A 7265 6462
    7574 746F 6E5F 6E6F 745F 7265 6163 6861
    626C 655F 6572 726F 725F 7465 7874 203D
    2053 6572 7669 6365 2069 7320 6375 7272
    656E 746C 7920 6E6F 7420 7375 6273 6372
    6962 6564 2062 7920 796F 752E 506C 6561
    7365 2063 6F6E 7461 6374 2063 7573 746F
    6D65 7220 6361 7265 2061 7420 3138 3030
    2031 3032 2038 3038 3020 2874 6F6C 6C20
    6672 6565 2920 6F72 2030 3230 2034 3031
    3831 3430 3020 746F 2061 6464 2074 6869
    7320 746F 2079 6F75 7220 7061 636B 6167
    652E 0D0A 0D0A 2357 6964 6765 7435 0D0A
    7769 6420 3D20 350D 0A72 6564 6275 7474
    6F6E 5F6C 6175 6E63 685F 7465 7874 203D
    2067 6F74 6F20 3132 310D 0A72 6564 6275
    7474 6F6E 5F75 726C 203D 2064 7662 3A2F
    2F41 432E 3039 2E32 4546 450D 0A72 6564
    6275 7474 6F6E 5F66 6472 5F6E 616D 6520
    3D20 0D0A 6D70 6720 3D20 6173 7365 7473
    2F6D 7067 732F 6C6F 6164 696E 672E 6D70
    670D 0A72 6564 6275 7474 6F6E 5F74 7269
    616C 5F70 6572 696F 6420 3D20 3232 2F30
    312F 3132 0D0A 7265 6462 7574 746F 6E5F
    6E6F 745F 7265 6163 685F 7469 6D65 6F75
    743D 3130 0D0A 7265 6462 7574 746F 6E5F
    6E6F 745F 6175 7468 6F72 6973 6564 203D
    2054 6869 7320 6954 5620 7365 7276 6963
    6520 6973 2063 7572 7265 6E74 6C79 206E
    6F74 2073 7562 7363 7269 6265 6420 6279
    2079 6F75 2E20 506C 6561 7365 2063 6F6E
    7461 6374 2063 7573 746F 6D65 7220 6361
    7265 2061 7420 3138 3030 2031 3032 2038
    3038 3020 2874 6F6C 6C20 6672 6565 2920
    6F72 2030 3230 2034 3031 3831 3430 3020
    746F 2061 6464 2074 6869 7320 746F 2079
    6F75 7220 7061 636B 6167 652E 0D0A 7265
    6462 7574 746F 6E5F 6E6F 745F 7265 6163
    6861 626C 655F 6572 726F 725F 7465 7874
    203D 2053 6572 7669 6365 2069 7320 6375
    7272 656E 746C 7920 6E6F 7420 7375 6273
    6372 6962 6564 2062 7920 796F 752E 506C
    6561 7365 2063 6F6E 7461 6374 2063 7573
    746F 6D65 7220 6361 7265 2061 7420 3138
    3030 2031 3032 2038 3038 3020 2874 6F6C
    6C20 6672 6565 2920 6F72 2030 3230 2034
    3031 3831 3430 3020 746F 2061 6464 2074
    6869 7320 746F 2079 6F75 7220 7061 636B
    6167 652E B204 2AB1                              
    '''
    dii = ExtractData(None)
    
    dii.set_buffer(dii_raw_string)
    dii.write('ref_dsm-cc_ddb-module_B-section2.bin')
